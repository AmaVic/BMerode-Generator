package event;

#foreach($bot in $bots)
import entity.$bot;
#end

import runtime.BusinessEvent;
import runtime.exception.BusinessEventNotFoundException;

import java.util.HashMap;
import java.util.Map;

public class EventsMapping {
  private static final EventsMapping instance = new EventsMapping();
  private Map<String, BusinessEvent> events;

  private EventsMapping() {
     this.events = new HashMap<String, BusinessEvent>();
     this.loadEvents();
  }

  public boolean eventExists(String eventName) {
return this.events.containsKey(eventName);
}

  public BusinessEvent getBusinessEvent(String name) throws BusinessEventNotFoundException {
    if(!this.eventExists(name))
      throw new BusinessEventNotFoundException("EventsMapping.getBusinessEvent(String): event with name" + name + " not found");

    return this.events.get(name);
  }

  private void loadEvents() {
#foreach($event in $events)
    BusinessEvent $event.getName() = new BusinessEvent("${event.getName()}", $event.getEffectType(), $event.getOwnerBOTClass());
    this.events.put(${event.getName()}.getName(), $event.getName());

#end
  }

public static EventsMapping instance() { return instance; }

}
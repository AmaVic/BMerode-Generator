package state.${util.getStringWithFirstLowerCap($BOTName)};

import entity.$BOTName;
#foreach($master in $masters)
import entity.$util.getStringWithFirstCap($master);
#end

import runtime.StubHelper;
import runtime.exception.FailedEventHandlingException;

import org.hyperledger.fabric.contract.Context;

public class $BOTName${util.getStringWithFirstCap($stateName)}State extends $name {
  //========== Constructor ===========
  public $BOTName${util.getStringWithFirstCap($stateName)}State() {
    super("$stateName", $stateType);
  }

  //========= Event Handling =========
  //--- Creating Events ---
#foreach($method in $methods)
#if($method.getEffectType().equals("CREATE"))
  @Override
  public void $method.getName()($BOTName object, Context ctx) throws FailedEventHandlingException {
    //Changes the state of the current $BOTName (object)
    $BOTName$util.getStringWithFirstCap($method.getTargetStateName())State newState = new $BOTName$util.getStringWithFirstCap($method.getTargetStateName())State();
    object.setCurrentState(newState);
    StubHelper.save(ctx, object);
#if($masters.size() > 0)
    //Check if the references masters exist
#foreach($masterName in $masters)
    //$util.getStringWithFirstCap($masterName)
    if(!StubHelper.exists(ctx, object.get${util.getStringWithFirstCap($masterName)}Id()))
      throw new FailedEventHandlingException("Master with id " + object.get$util.getStringWithFirstCap($masterName)Id() + " does not exist");
#end

    //Trigger Event Handling for Each Master
#foreach($masterName in $masters)
    //$util.getStringWithFirstCap($masterName)
    $util.getStringWithFirstCap($masterName) $util.getStringWithFirstLowerCap($masterName) = ($util.getStringWithFirstCap($masterName))StubHelper.findBusinessObject(ctx, object.get$util.getStringWithFirstCap($masterName)Id());
    ${util.getStringWithFirstLowerCap($masterName)}.getCurrentState().$method.getName()($util.getStringWithFirstLowerCap($masterName), ctx);
#end
#end
  }
#end
#end
  //--- Modifying Events ---
#foreach($method in $methods)
#if($method.getEffectType().equals("MODIFY"))
  @Override
  public void $method.getName()($BOTName object, Context ctx) throws FailedEventHandlingException {
#if($masters.size() > 0)
    //The $BOTName object will be saved with its current properties
    //Before changing state and (possibly) attributes, we check there was no change to the masters
    $BOTName currentLedgerObject = ($BOTName)StubHelper.findBusinessObject(ctx, object.getId());
#foreach($masterName in $masters)
    if(!object.get$util.getStringWithFirstCap($masterName)Id().equals(currentLedgerObject.get$util.getStringWithFirstCap($masterName)Id()))
      throw new FailedEventHandlingException("The master of a Business Object (" + object.getId() + ") cannot be changed");
#end
#end
    //Changes the state of the current $BOTName (object)
    $BOTName$util.getStringWithFirstCap($method.getTargetStateName())State newState = new $BOTName$util.getStringWithFirstCap($method.getTargetStateName())State();
    object.setCurrentState(newState);
    StubHelper.save(ctx, object);
#if($masters.size() > 0)
    //Trigger Event Handling for Each Master
#foreach($masterName in $masters)
    //$util.getStringWithFirstCap($masterName)
    $util.getStringWithFirstCap($masterName) $util.getStringWithFirstLowerCap($masterName) = ($util.getStringWithFirstCap($masterName))StubHelper.findBusinessObject(ctx, object.get$util.getStringWithFirstCap($masterName)Id());
    ${util.getStringWithFirstLowerCap($masterName)}.getCurrentState().$method.getName()($util.getStringWithFirstLowerCap($masterName), ctx);
#end
#end
  }
#end
#end

  //--- Ending Events ---
#foreach($method in $methods)
#if($method.getEffectType().equals("END"))
  @Override
  public void $method.getName()($BOTName object, Context ctx) throws FailedEventHandlingException {
    //Check if there are living  dependents before ending the object
    if(StubHelper.hasLivingDependents(ctx, object))
      throw new FailedEventHandlingException("$BOTName (" + object.getId() + ") has living dependents and therefore cannot be ended");

    //Changes the state of the current $BOTName (object)
    $BOTName$util.getStringWithFirstCap($method.getTargetStateName())State newState = new $BOTName$util.getStringWithFirstCap($method.getTargetStateName())State();
    object.setCurrentState(newState);
    StubHelper.save(ctx, object);
#if($masters.size() > 0)
    //Trigger Event Handling for Each Master
#foreach($masterName in $masters)
    //$util.getStringWithFirstCap($masterName)
    $util.getStringWithFirstCap($masterName) $util.getStringWithFirstLowerCap($masterName) = ($util.getStringWithFirstCap($masterName))StubHelper.findBusinessObject(ctx, object.get$util.getStringWithFirstCap($masterName)Id());
    ${util.getStringWithFirstLowerCap($masterName)}.getCurrentState().$method.getName()($util.getStringWithFirstLowerCap($masterName), ctx);
#end
#end
  }
#end
#end
}
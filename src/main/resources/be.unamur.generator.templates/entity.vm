package entity;

#foreach($attribute in $attributes)
#if($attribute.getType().equals("LocalDateTime"))
import java.time.LocalDateTime;
#end
#end

import com.owlike.genson.annotation.JsonCreator;
import com.owlike.genson.annotation.JsonProperty;

import runtime.BusinessObject;

import state.$util.getStringWithFirstLowerCap($name).$util.getStringWithFirstCap($name)State;
import state.$util.getStringWithFirstLowerCap($name).$util.getStringWithFirstCap($name)AllocatedState;

public class $name extends BusinessObject {
   //=========== Attributes ===========
  private final boolean isParticipant = $isParticipant;
#foreach($attribute in $attributes)
#if($attribute.isMasterRef())
  private final $attribute.getType() $attribute.getName();
#else
  private $attribute.getType() $attribute.getName();
#end
#end

  //========== Constructors ==========
  /**
   * Creates a new $name with a Generated ID and Default State: Allocated
   */
  @JsonCreator
  public $name($util.buildParamString($attributes, true, false)) {
    super();
    this.currentState = new $util.getDefaultStateTypeName($name)();
#foreach($attribute in $attributes)
#if(!$attribute.isAddedByDefault())
    this.$attribute.getName() = $attribute.getName();
#end
#end
  }

#set($fullConstructorParamString = "@JsonProperty(""id"") String id")
#set($paramStringWithoutId = $util.buildParamString($attributes, true, true))
#if($paramStringWithoutId.length() > 0)
    #set($fullConstructorParamString = $fullConstructorParamString + ", " + $paramStringWithoutId)
#end
  public $name($fullConstructorParamString) {
    super(id);
#foreach($attribute in $attributes)
    this.$attribute.getName() = $attribute.getName();
#end
  }

  //============ Getters =============
  @Override
  public boolean isParticipant() { return this.isParticipant; }
#foreach($attribute in $attributes)
  public $attribute.getType() get$attribute.getNameWithFirstCap()() { return this.$attribute.getName(); }
#end

  //============ Setters =============
#foreach($attribute in $attributes)
#if(!$attribute.isMasterRef())
  public void set$attribute.getNameWithFirstCap()($attribute.getType() $attribute.getName()) { this.$attribute.getName() = $attribute.getName(); }
#end
#end

## ================================================
## ==================== Json ======================
  //===== JSON (De)serialization =====
  public String toJsonString() { return genson.serialize(this); }
  public static $name fromJson(String json) { return genson.deserialize(json, ${name}.class); }
}